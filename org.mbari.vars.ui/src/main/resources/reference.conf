accounts.service {
  url = "http://localhost:8081/accounts/v1"
  url = ${?ACCOUNTS_SERVICE_URL}
  timeout = "5 seconds"
  timeout = ${?ACCOUNTS_SERVICE_TIMEOUT}
  client.secret = "foo"
  client.secret = ${?ACCOUNTS_SERVICE_CLIENT_SECRET}
}

annotation.service {
  url = "http://localhost:8082/anno/v1"
  url = ${?ANNOTATION_SERVICE_URL}
  timeout = "30 seconds"
  timeout = ${?ANNOTATION_SERVICE_TIMEOUT}
  client.secret = "foo"
  client.secret = ${?ANNOTATION_SERVICE_CLIENT_SECRET}
  page.size = 1000
  page.size = ${?ANNOTATION_SERVICE_PAGE_SIZE}
  // when running multiple annosaurus instaces behind a load balancer use
  // "parallel" other wise "sequential" is recommended. Not the parse
  // only looks to see if the paging value starts with "par" to turn on the
  // parallel paging. Otherwise "sequential" is used
  paging = "parallel"
  paging = ${?ANNOTATION_SERVICE_PAGING}
  // page.count is number of simultaneous page requests when paging is `parallel`
  page.count = 2
  page.count = ${?ANNOTATION_SERVICE_PAGE_COUNT}
}


app {
  annotation {
    sample {
      association.comment = "comment"
      association.comment = ${?APP_ANNOTATION_SAMPLE_ASSOCIATION_COMMENT}
      association.equipment = "sampled-by"
      association.equipment = ${?APP_ANNOTATION_SAMPLE_ASSOCIATION_EQUIPMENT}
      association.population = "population-quantity"
      association.population = ${?APP_ANNOTATION_SAMPLE_ASSOCIATION_POPULATION}
      association.reference = "sample-reference"
      association.reference = ${?APP_ANNOTATION_SAMPLE_ASSOCIATION_REFERENCE}
      default.concept = "equipment"
      default.concept = ${?APP_ANNOTATION_SAMPLE_DEFAULT_CONCEPT}
      // If the linknames below are present then the association table says that
      // the annotation contains a sample
      linknames = [
        "sample-reference"
        "sampled-by"
      ]
    }
    identity.reference = "identity-reference"
    identity.reference = ${?APP_ANNOTATION_IDENTITY_REFERENCE}
    upon.linkname = "upon"
    upon.linkname = ${?APP_ANNOTATION_UPON_LINKNAME}
    upon.root = "physical object"
    upon.root = ${?APP_ANNOTATION_UPON_ROOT}
    details.cache = [
      "marine organism"
      "object"
      "physical object"
    ]
  }
  defaults {
    cameraid = ""
    cameraid = ${?APP_DEFAULTS_CAMERAID}
    group = "ROV"
    group = ${?APP_DEFAULTS_GROUP}
    activity = "descend"
    activity = ${?APP_DEFAULTS_ACTIVITY}
  }
  image.copyright.owner = ""
  image.copyright.owner = ${?APP_IMAGE_COPYRIGHT_OWNER}
  injector.module.class = "org.mbari.vars.ui.GuiceInjectorModule"
}


concept.service {
  url = "http://localhost:8083/kb/v1"
  url = ${?CONCEPT_SERVICE_URL}
  timeout = "5 seconds"
  timeout = ${?CONCEPT_SERVICE_TIMEOUT}
  // This contains Java regex for link-templates to ignore in the UI
  template.filters = ["^dsg.*"]
  template.filters = ${?CONCEPT_SERVICE_TEMPLATE_FILTERS}
}

localization {
  defaults {
    incoming {
      port: 5561
      port: ${?LOCALIZATION_DEFAULTS_INCOMING_PORT}
      topic: "localization"
      topic: ${?LOCALIZATION_DEFAULTS_INCOMING_TOPIC}
    }
    outgoing {
      port: 5562
      port: ${?LOCALIZATION_DEFAULTS_OUTGOING_PORT}
      topic: "localization"
      topic: ${?LOCALIZATION_DEFAULTS_OUTGOING_TOPIC}
    }
  }
}

media.service {
  url = "http://localhost:8084/vam/v1"
  url = ${?MEDIA_SERVICE_URL}
  timeout = "10 seconds"
  timeout = ${?MEDIA_SERVICE_TIMEOUT}
  client.secret = "foo"
  client.secret = ${?MEDIA_SERVICE_CLIENT_SECRET}
}

panoptes.service {
  url = "http://localhost:8085/panoptes/v1"
  url = ${?PANOPTES_SERVICE_URL}
  timeout = "60 seconds"
  timeout = ${?PANOPTES_SERVICE_TIMEOUT}
  client.secret = "foo"
  client.secret = ${?PANOPTES_SERVICE_CLIENT_SECRET}
}

preferences.service {
  url = "http://localhost:8087/users/v1"
  url = ${?PREFERENCES_SERVICE_URL}
  timeout = "5 seconds"
  timeout = ${?PREFERENCES_SERVICE_TIMEOUT}
  client.secret = "foo"
  client.secret = ${?PREFERENCES_SERVICE_CLIENT_SECRET}
}

sharktopoda {
  defaults {
    control.port = 8800
    control.port = ${?SHARKTOPODA_DEFAULTS_CONTROL_PORT}
    framegrab.port = 5000
    framegrab.port =  ${?SHARKTOPODA_DEFAULTS_FRAMEGRAB_PORT}
  }
}




